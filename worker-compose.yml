# 工作节点配置 - 集中式架构，直连主节点
name: bento-worker

# 基础环境变量定义 - 直连主节点集中式服务
x-base-environment: &base-environment
  DATABASE_URL: postgresql://${POSTGRES_USER:-worker}:${POSTGRES_PASSWORD:-password}@${MASTER_HOST_IP}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-taskdb}
  REDIS_URL: redis://${MASTER_HOST_IP}:6379
  S3_URL: http://${MASTER_HOST_IP}:9000
  S3_BUCKET: ${MINIO_BUCKET:-workflow}
  S3_ACCESS_KEY: ${MINIO_ROOT_USER:-admin}
  S3_SECRET_KEY: ${MINIO_ROOT_PASS:-password}
  RUST_LOG: ${RUST_LOG:-info}
  RUST_BACKTRACE: 1
  # 内网优化配置
  no_proxy: "localhost,127.0.0.1,::1,192.168.0.0/16,172.16.0.0/12,10.0.0.0/8"
  NO_PROXY: "localhost,127.0.0.1,::1,192.168.0.0/16,172.16.0.0/12,10.0.0.0/8"

services:
  # 连接监控服务 - 监控与主节点的连接状态
  connection-monitor:
    image: ${REDIS_IMG:-redis:7.2.5-alpine3.19}
    restart: always
    environment:
      - MASTER_HOST_IP=${MASTER_HOST_IP}
      - WORKER_ID=${WORKER_ID:-1}
      - POSTGRES_USER=${POSTGRES_USER:-worker}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-taskdb}
    command: >
      sh -c "
        echo 'Starting connection monitor for worker ${WORKER_ID:-1}...'
        while true; do
          echo '$(date): Checking master node connectivity...'
          
          # 检查Redis连接
          redis-cli -h ${MASTER_HOST_IP} -p 6379 ping > /dev/null 2>&1 && \
            echo 'Redis: ✅ Connected' || echo 'Redis: ❌ Disconnected'
          
          # 检查PostgreSQL连接  
          nc -z ${MASTER_HOST_IP} 5432 > /dev/null 2>&1 && \
            echo 'PostgreSQL: ✅ Connected' || echo 'PostgreSQL: ❌ Disconnected'
          
          # 检查MinIO连接
          nc -z ${MASTER_HOST_IP} 9000 > /dev/null 2>&1 && \
            echo 'MinIO: ✅ Connected' || echo 'MinIO: ❌ Disconnected'
          
          echo 'Worker ${WORKER_ID:-1} - Health check completed'
          sleep 30
        done
      "
    networks:
      - worker-network

  # GPU Prove Agents (工作节点8个GPU) - 直连主节点
  gpu_prove_agent0: &gpu-agent
    image: risczero/risc0-bento-agent:2.3.0@sha256:5b029fb8074b3273b45e6e8fb4d6dbd86000a216688d8f1429eb893686cc1ff8
    runtime: nvidia
    restart: always
    depends_on:
      - connection-monitor
    mem_limit: 24G
    cpus: 6
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-0"
      NODE_ID: "worker-${WORKER_ID:-1}"
    entrypoint: /app/agent -t prove --redis-ttl ${REDIS_TTL:-57600}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
    networks:
      - worker-network

  gpu_prove_agent1:
    <<: *gpu-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-1"
      NODE_ID: "worker-${WORKER_ID:-1}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['1']
              capabilities: [gpu]

  gpu_prove_agent2:
    <<: *gpu-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-2"
      NODE_ID: "worker-${WORKER_ID:-1}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['2']
              capabilities: [gpu]

  gpu_prove_agent3:
    <<: *gpu-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-3"
      NODE_ID: "worker-${WORKER_ID:-1}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['3']
              capabilities: [gpu]

  gpu_prove_agent4:
    <<: *gpu-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-4"
      NODE_ID: "worker-${WORKER_ID:-1}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['4']
              capabilities: [gpu]

  gpu_prove_agent5:
    <<: *gpu-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-5"
      NODE_ID: "worker-${WORKER_ID:-1}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['5']
              capabilities: [gpu]

  gpu_prove_agent6:
    <<: *gpu-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-6"
      NODE_ID: "worker-${WORKER_ID:-1}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['6']
              capabilities: [gpu]

  gpu_prove_agent7:
    <<: *gpu-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      AGENT_ID: "worker-${WORKER_ID:-1}-gpu-7"
      NODE_ID: "worker-${WORKER_ID:-1}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['7']
              capabilities: [gpu]

  # Executor Agents (工作节点少量，分担segments生成任务)
  exec_agent0: &exec-agent
    image: risczero/risc0-bento-agent:2.3.0@sha256:5b029fb8074b3273b45e6e8fb4d6dbd86000a216688d8f1429eb893686cc1ff8
    restart: always
    depends_on:
      - connection-monitor
    mem_limit: 6G
    cpus: 8
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      RISC0_KECCAK_PO2: ${RISC0_KECCAK_PO2:-17}
      AGENT_ID: "worker-${WORKER_ID:-1}-exec-0"
      NODE_ID: "worker-${WORKER_ID:-1}"
    entrypoint: /app/agent -t exec --segment-po2 ${SEGMENT_SIZE:-22} --redis-ttl ${REDIS_TTL:-57600}
    networks:
      - worker-network

  exec_agent1:
    <<: *exec-agent
    environment:
      <<: *base-environment
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:-/usr/local/cuda-12.6/compat/}
      RISC0_KECCAK_PO2: ${RISC0_KECCAK_PO2:-17}
      AGENT_ID: "worker-${WORKER_ID:-1}-exec-1"
      NODE_ID: "worker-${WORKER_ID:-1}"

  # 注意：工作节点不运行SNARK和AUX agents
  # SNARK: CPU密集型，集中在主节点更高效
  # AUX: 监控重排队功能，全集群只需1个

networks:
  worker-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
        gateway: 172.21.0.1

# 工作节点使用集中式服务，无需本地存储卷